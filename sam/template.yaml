AWSTemplateFormatVersion: '2010-09-09'
Transform: 
  - AWS::Serverless-2016-10-31
Description: >
  frontend-starter 

  SAM template for frontend projects

Parameters:
  DomainName:
    Type: String
    Default: ''
  ACMCertificateArn:
    Type: String
    Default: ''
  UseCustomDomainName:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
  ExistingHostedZoneID:
    Type: String
    Default: ''

Conditions:
  UseCustomDomain: !Equals [ !Ref UseCustomDomainName, 'true' ]
  IsExistingHostedZoneIdEmpty: !Equals [!Ref ExistingHostedZoneID, '']
  IsACMCertificateArnEmpty: !Equals [!Ref ACMCertificateArn, '']
  CreateCertificate: !And [!Condition UseCustomDomain, !Condition IsACMCertificateArnEmpty]


Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      BucketName: !Sub 'frontend-starter-${AWS::AccountId}-${AWS::Region}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          -
            Effect: Allow
            Action: 's3:GetObject'
            Resource:
              - !Sub "arn:aws:s3:::${S3Bucket}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"

  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Serverless website OA'

  CloudfrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Comment: "Cloudfront distribution for serverless website"
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        Aliases: !If
          - UseCustomDomain
          - - !Ref DomainName
          - !Ref AWS::NoValue
        ViewerCertificate: !If
          - UseCustomDomain
          - AcmCertificateArn: !If [IsACMCertificateArnEmpty, !Ref Certificate, !Ref ACMCertificateArn]
            SslSupportMethod: sni-only
          - !Ref AWS::NoValue
        Origins:
          - Id: s3-website
            DomainName: !GetAtt S3Bucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: 
                Fn::Sub: 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        DefaultCacheBehavior:
          Compress: 'true'
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3-website
          ViewerProtocolPolicy : redirect-to-https
    
  MyHostedZone:
    Type: AWS::Route53::HostedZone
    Condition: UseCustomDomain
    Properties:
      Name: !Sub '${DomainName}.'

  Route53RecordSet:
    Type: "AWS::Route53::RecordSet"
    Condition: UseCustomDomain
    Properties:
      HostedZoneId: !If [IsExistingHostedZoneIdEmpty, !Ref MyHostedZone, !Ref ExistingHostedZoneID]
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt CloudfrontDistribution.DomainName

  
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Condition: CreateCertificate 
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Sub '${DomainName}'
          HostedZoneId: !If [IsExistingHostedZoneIdEmpty, !Ref MyHostedZone, !Ref ExistingHostedZoneID]

  InternetMonitor:
    Type: AWS::InternetMonitor::Monitor
    Properties:
      MaxCityNetworksToMonitor: 100
      MonitorName: frontend-starter-monitor
      Resources:
        - !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudfrontDistribution.Id}
      Status: ACTIVE

